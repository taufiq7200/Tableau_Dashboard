<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.19.1013.2251                               -->
<workbook original-version='10.3' source-build='10.3.26 (10300.19.1013.2251)' source-platform='win' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.3'>
      <aliases enabled='yes' />
      <column caption='Increase Case' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.57999999999999996'>
        <calculation class='tableau' formula='0.57999999999999996' />
        <range granularity='0.01' max='1.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (owid-covid-data.csv)' inline='true' name='federated.1rbkohf0zfogfj1h3telh0duqrjv' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data.csv' name='excel-direct.10ummfn1qqija1126bbvw1xeocbi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Taufiq/Desktop/Excel_Data/owid-covid-data.csv.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.10ummfn1qqija1126bbvw1xeocbi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AW10001:no:A1:AW10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='integer' name='icu_patients' ordinal='16' />
            <column datatype='real' name='icu_patients_per_million' ordinal='17' />
            <column datatype='integer' name='hosp_patients' ordinal='18' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='19' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='21' />
            <column datatype='real' name='weekly_hosp_admissions' ordinal='22' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='23' />
            <column datatype='integer' name='total_tests' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='26' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='27' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='29' />
            <column datatype='real' name='tests_per_case' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='string' name='tests_units' ordinal='32' />
            <column datatype='real' name='stringency_index' ordinal='33' />
            <column datatype='integer' name='population' ordinal='34' />
            <column datatype='real' name='population_density' ordinal='35' />
            <column datatype='real' name='median_age' ordinal='36' />
            <column datatype='real' name='aged_65_older' ordinal='37' />
            <column datatype='real' name='aged_70_older' ordinal='38' />
            <column datatype='real' name='gdp_per_capita' ordinal='39' />
            <column datatype='real' name='extreme_poverty' ordinal='40' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='41' />
            <column datatype='real' name='diabetes_prevalence' ordinal='42' />
            <column datatype='real' name='female_smokers' ordinal='43' />
            <column datatype='real' name='male_smokers' ordinal='44' />
            <column datatype='real' name='handwashing_facilities' ordinal='45' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='46' />
            <column datatype='real' name='life_expectancy' ordinal='47' />
            <column datatype='real' name='human_development_index' ordinal='48' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AW10001:no:A1:AW10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='what if ' datatype='real' name='[Calculation_188588280979128320]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([new_cases])*(1+[Parameters].[Parameter 1])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' hidden='true' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' hidden='true' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' hidden='true' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' hidden='true' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' hidden='true' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' hidden='true' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' hidden='true' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='real' hidden='true' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' hidden='true' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' hidden='true' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' hidden='true' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='real' hidden='true' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Life Expectancy' datatype='real' hidden='true' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' hidden='true' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' hidden='true' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' hidden='true' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='real' hidden='true' name='[weekly_hosp_admissions]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='real' hidden='true' name='[weekly_hosp_admissions_per_million]' role='measure' type='quantitative' />
      <column caption='Weekly Icu Admissions' datatype='string' hidden='true' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' hidden='true' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_70_older]' derivation='Sum' name='[sum:aged_70_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_age]' derivation='Sum' name='[sum:median_age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_per_million]' derivation='Sum' name='[sum:new_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_188588280979128320]' derivation='User' name='[usr:Calculation_188588280979128320:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Continent)' hidden='true' name='[Action (Continent)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[continent]' />
        </groupfilter>
      </group>
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date),Location)' hidden='true' name='[Action (MONTH(Date),Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:date:ok]' />
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.178876' measure-ordering='alphabetic' measure-percentage='0.781942' parameter-percentage='0.0391823' rowDisplayCount='100000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:median_age:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Parameters].[Parameter 1]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths_per_million:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:aged_70_older:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv].[usr:Calculation_188588280979128320:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Increase Case' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.57999999999999996'>
          <calculation class='tableau' formula='0.57999999999999996' />
          <range granularity='0.01' max='1.0' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Caese vs Death' type='sheet' worksheet='Total Cases' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Caese vs Death' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Caese vs Death' type='sheet' worksheet='Total Cases Across Death ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Caese vs Death' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='cases based on Age (65 , 70)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Case based on Median Age' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Case based on Median Age'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data.csv)' name='federated.1rbkohf0zfogfj1h3telh0duqrjv' />
          </datasources>
          <datasource-dependencies datasource='federated.1rbkohf0zfogfj1h3telh0duqrjv'>
            <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[median_age]' derivation='Sum' name='[sum:median_age:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (Continent)]'>
            <groupfilter function='level-members' level='[continent]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]'>
            <groupfilter count='30' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([aged_65_older])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]</column>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (Location)]</column>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (Continent)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:median_age:qk]</rows>
        <cols>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data.csv)' name='federated.1rbkohf0zfogfj1h3telh0duqrjv' />
          </datasources>
          <datasource-dependencies datasource='federated.1rbkohf0zfogfj1h3telh0duqrjv'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (MONTH(Date),Location)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]' direction='DESC' using='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases:qk]' />
          <filter class='quantitative' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]</column>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (Location)]</column>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (MONTH(Date),Location)]</column>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases:qk]</rows>
        <cols>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Cases Across Death '>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data.csv)' name='federated.1rbkohf0zfogfj1h3telh0duqrjv' />
          </datasources>
          <datasource-dependencies datasource='federated.1rbkohf0zfogfj1h3telh0duqrjv'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths_per_million]' derivation='Sum' name='[sum:new_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (MONTH(Date),Location)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]' direction='DESC' using='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_deaths:qk]' />
          <filter class='quantitative' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]</column>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (Location)]</column>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_deaths:qk]</column>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (MONTH(Date),Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths_per_million:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths_per_million:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_deaths:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_deaths_per_million:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[tmn:date:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases_per_million:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_deaths_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_deaths:qk] + ([federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths:qk] + ([federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_deaths_per_million:qk] + ([federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths_per_million:qk] + ([federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases:qk] + [federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases_per_million:qk])))))</rows>
        <cols>([federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk] * [federated.1rbkohf0zfogfj1h3telh0duqrjv].[tmn:date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='cases based on Age (65 , 70)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data.csv)' name='federated.1rbkohf0zfogfj1h3telh0duqrjv' />
          </datasources>
          <datasource-dependencies datasource='federated.1rbkohf0zfogfj1h3telh0duqrjv'>
            <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
            <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
            <column-instance column='[aged_70_older]' derivation='Sum' name='[sum:aged_70_older:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (Continent)]'>
            <groupfilter function='level-members' level='[continent]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]'>
            <groupfilter count='30' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([aged_65_older])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:aged_65_older:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:aged_70_older:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:aged_65_older:qk]</column>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]</column>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:aged_70_older:qk]</column>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (Location)]</column>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[Action (Continent)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:aged_70_older:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:aged_70_older:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:aged_65_older:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3733149766921997' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:aged_70_older:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:aged_65_older:qk] + [federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:aged_70_older:qk])</rows>
        <cols>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='total cases across Continent'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data.csv)' name='federated.1rbkohf0zfogfj1h3telh0duqrjv' />
          </datasources>
          <datasource-dependencies datasource='federated.1rbkohf0zfogfj1h3telh0duqrjv'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:continent:nk]'>
            <groupfilter from='&quot;Africa&quot;' function='range' level='[none:continent:nk]' to='&quot;South America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:continent:nk]' direction='DESC' using='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases:qk]' />
          <slices>
            <column>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_cases:qk] + ([federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_cases:qk] + ([federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:total_deaths:qk] + [federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths:qk])))</rows>
        <cols>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:continent:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Caese vs Death'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='4' type='layout-basic' w='99750' x='0' y='0'>
              <zone h='100000' id='3' name='Total Cases Across Death ' w='77712' x='22038' y='0' />
              <zone h='100000' id='8' name='Total Cases' w='22038' x='0' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='4' type='layout-basic' w='99750' x='0' y='0'>
              <zone h='50000' id='1' name='Case based on Median Age' w='99750' x='0' y='0' />
              <zone h='50000' id='3' name='cases based on Age (65 , 70)' w='99750' x='0' y='50000' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Total Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]</field>
            <field>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Cases Across Death '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]</field>
            <field>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Caese vs Death'>
      <viewpoints>
        <viewpoint name='Total Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Cases Across Death '>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[sum:new_deaths:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='worksheet' name='cases based on Age (65 , 70)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.1rbkohf0zfogfj1h3telh0duqrjv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]</field>
            <field>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Case based on Median Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Case based on Median Age'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='cases based on Age (65 , 70)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
    </window>
    <window class='worksheet' maximized='true' name='total cases across Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1rbkohf0zfogfj1h3telh0duqrjv].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Caese vs Death' width='192'>
      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
      itjvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Case based on Median Age' width='192'>
      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
      53ccBP9/fKuZod0mhBMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      deD/BwDVEsMIxnwcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Cases Across Death ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cases based on Age (65 , 70)' width='192'>
      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
      YQSLKu2n5wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='total cases across Continent' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
